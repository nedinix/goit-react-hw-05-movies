{"version":3,"file":"static/js/966.0de0725f.chunk.js","mappings":"kTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBC,OAAQ,mBACRC,cACE,8NAGG,IAAMC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAU,sBADA,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAc,mCAAG,WAAMC,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADd,cACtBJ,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,0EAC1BA,EAD0B,iEAERV,EAAAA,EAAAA,IAAA,eAA0B,CAC/CW,OAAQ,CACNC,MAAOF,EACPG,eAAe,KALY,cAEzBT,EAFyB,OAQ/BU,QAAQC,IAAI,WAAYX,GARO,kBASxBA,EAASC,KAAKC,SATU,2CAAH,sDAYjBU,EAAc,mCAAG,WAAMR,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADK,cACtBJ,EADsB,OAE5BU,QAAQC,IAAIX,GAFgB,kBAGrBA,EAASC,KAAKY,MAHO,2CAAH,sDAMdC,EAAiB,mCAAG,WAAMV,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADQ,cACzBJ,EADyB,OAE/BU,QAAQC,IAAIX,GAFmB,kBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qD,+JCN9B,EA9Ba,WACX,MCAgC,WAChC,OAAoCa,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACAH,GAAa,GACbF,EAAc,IACd,IAAMQ,EAAS,mCAAG,8GAESb,EAAAA,EAAAA,IAAeU,GAFxB,OAERtB,EAFQ,OAGdU,QAAQC,IAAIX,GACZiB,EAAcjB,GAJA,gDAMdqB,EAAS,KAAMK,SAND,yBAQdP,GAAa,GARC,4EAAH,qDAWfM,GAdoB,CAerB,GAAE,CAACH,IAEG,CAAEN,WAAAA,EAAYE,UAAAA,EAAWE,MAAAA,EACjC,CD1B0CO,GAAjCX,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,UAAWE,EAA/B,EAA+BA,MAC/B,OACE,gCACGF,IAAa,SAACU,EAAA,EAAD,KACd,wBACGZ,EAAWa,KAAI,YAA4C,IAAzCzB,EAAwC,EAAxCA,GAAI0B,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACzC,OACE,2BACE,gBACEC,IAAG,yCAAoCF,GACvCG,IAAKJ,EACLK,OAAO,SAET,0BACE,4BAAQ,WACPL,MAEH,0BACE,4BAAQ,WACPE,OAZI5B,EAgBZ,MAEFgB,IAAS,uBAAIA,MAGnB,C","sources":["api-service/api-service.js","components/Cast/Cast.jsx","hooks/useFetchMovieCasts.js"],"sourcesContent":["import axios from 'axios';\n\n// const API_KEY = 'fc003692354e60dd191d57f224193ebc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYzAwMzY5MjM1NGU2MGRkMTkxZDU3ZjIyNDE5M2ViYyIsInN1YiI6IjY0OTRiYzBkOTdlYWI0MDE0NjUzYTg0OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eRloYStb0E7htYX_KZc4cK1BXIC7CsOABKJUGMS2eo4',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMoviesByName = async value => {\n  if (!value) return;\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query: value,\n      include_adult: false,\n    },\n  });\n  console.log('response', response);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  console.log(response);\n  return response.data.results;\n};\n","import { Loader } from 'components/Loader';\nimport { useFetchMovieCasts } from 'hooks/useFetchMovieCasts';\n\nconst Cast = () => {\n  const { movieCasts, isLoading, error } = useFetchMovieCasts();\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {movieCasts.map(({ id, name, profile_path, character }) => {\n          return (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                height=\"240\"\n              />\n              <p>\n                <strong>Name: </strong>\n                {name}\n              </p>\n              <p>\n                <strong>Role: </strong>\n                {character}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\nexport default Cast;\n","import { fetchMovieCast } from 'api-service/api-service';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieCasts = () => {\n  const [movieCasts, setMovieCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    setMovieCasts([]);\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        console.log(response);\n        setMovieCasts(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return { movieCasts, isLoading, error };\n};\n"],"names":["axios","accept","Authorization","fetchTrendingMovies","response","data","results","fetchMovieById","id","fetchMoviesByName","value","params","query","include_adult","console","log","fetchMovieCast","cast","fetchMovieReviews","useState","movieCasts","setMovieCasts","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchData","message","useFetchMovieCasts","Loader","map","name","profile_path","character","src","alt","height"],"sourceRoot":""}