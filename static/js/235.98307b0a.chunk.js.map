{"version":3,"file":"static/js/235.98307b0a.chunk.js","mappings":"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","sources":["api-service/api-service.js","hooks/useFetchMovieById.js","components/MovieCard/MovieCard.jsx","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const API_KEY = 'fc003692354e60dd191d57f224193ebc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYzAwMzY5MjM1NGU2MGRkMTkxZDU3ZjIyNDE5M2ViYyIsInN1YiI6IjY0OTRiYzBkOTdlYWI0MDE0NjUzYTg0OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eRloYStb0E7htYX_KZc4cK1BXIC7CsOABKJUGMS2eo4',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMoviesByName = async value => {\n  if (!value) return;\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query: value,\n      include_adult: false,\n    },\n  });\n  console.log('response', response);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  console.log(response);\n  return response.data.results;\n};\n","import { fetchMovieById } from 'api-service/api-service';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieById = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    setMovie({});\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return { movie, isLoading, error };\n};\n","export const MovieCard = ({ movie }) => {\n  const { title, poster_path, status, vote_average, overview, genres } = movie;\n\n  const normalizedGenres = genres\n    ? genres.map(({ name }) => name).join(', ')\n    : 'none';\n  return (\n    <div>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n      </div>\n      <div>\n        <h3>{title}</h3>\n        <p>Status: {status}</p>\n        <p>User score: {vote_average}</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h5>Genres</h5>\n        <p>{normalizedGenres}</p>\n      </div>\n    </div>\n  );\n};\n","import { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { routes } from 'service/routes-service';\n\nexport const GoBackLink = () => {\n  const location = useLocation();\n  // console.log(location);\n  const backLinkLocationRef = useRef(location.state?.from ?? routes.MOVIES);\n  // console.log(backLinkLocationRef);\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current} state={{ from: location }}>\n        Back\n      </Link>\n    </div>\n  );\n};\n","import { Loader } from 'components/Loader';\nimport { MovieCard } from 'components/MovieCard';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\nimport { useFetchMovieById } from 'hooks/useFetchMovieById';\nimport { Link, Outlet } from 'react-router-dom';\nimport { routes } from 'service/routes-service';\n\nconst MovieDetails = () => {\n  const { movie, isLoading, error } = useFetchMovieById();\n  // const { id } = movie;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movie && (\n        <section>\n          <GoBackLink />\n          <MovieCard movie={movie} />\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={routes.CAST}>Casts</Link>\n              </li>\n              <li>\n                <Link to={routes.REVIEWS}>Reviews</Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </section>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","accept","Authorization","fetchTrendingMovies","response","data","results","fetchMovieById","id","fetchMoviesByName","value","params","query","include_adult","console","log","fetchMovieCast","cast","fetchMovieReviews","useFetchMovieById","useState","movie","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchData","message","MovieCard","title","poster_path","status","vote_average","overview","genres","normalizedGenres","map","name","join","src","alt","GoBackLink","location","useLocation","backLinkLocationRef","useRef","state","from","routes","to","current","Loader"],"sourceRoot":""}